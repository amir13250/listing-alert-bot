name: listing-bot

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: listing-bot
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check secrets presence
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "LEN(TOKEN) = ${#TELEGRAM_BOT_TOKEN}"
          echo "LEN(CHAT_ID) = ${#TELEGRAM_CHAT_ID}"
          if [ -z "$TELEGRAM_BOT_TOKEN" ]; then echo "❌ TOKEN is EMPTY"; exit 1; else echo "✅ TOKEN present"; fi
          if [ -z "$TELEGRAM_CHAT_ID" ]; then echo "❌ CHAT_ID is EMPTY"; exit 1; else echo "✅ CHAT_ID present"; fi

      - name: Test Telegram (debug)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "→ Calling getMe:"
          curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe" | sed -E 's/.{120}/&\n/g'
          echo ""
          echo "→ Sending test message:"
          RESP=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="✅ GitHub Actions is connected and working!")
          echo "Telegram API response:"
          echo "$RESP" | sed -E 's/.{120}/&\n/g'

      - name: Run bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          RECENT_HOURS: "6"
        run: |
          python bot.py

      - name: Persist seen.json (if changed)
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add seen.json
            git commit -m "chore: update seen.json [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
